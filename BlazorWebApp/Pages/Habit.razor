@layout MainLayout
@page "/habit/{Id}"
@using Client.Infrastructure
@using global::Shared.ChallengeDTO
@attribute [Authorize]

@inject HttpChallengeService _challengeService
@inject NavigationManager _navigationManager

<AuthorizeView>
    <Authorized>
        <UserLine/>
        <div class="container-fluid py-4">
            <div class="row">
                <div class="col-12 col-xl-6 mx-auto">

                    <div class="card h-100 ">
                        <div class="card-header pb-0 p-3">
                            <div class="row">
                                <div class="col-md-8 d-flex align-items-center">
                                    <h6 class="mb-0 heading">About Habbit</h6>
                                </div>
                                <div class="col-md-4 text-end">
                                        <NavLink class="nav-link" href="edithabit">
                                            <i class="fas fa-user-edit text-secondary text-sm" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit habit"></i>
                                        </NavLink>
                                    </div>
                            </div>
                        </div>
                        <div class="card-body p-3">
                            <ul class="list-group">
                                <li class="list-group-item border-0 ps-0 pt-0 text-sm"><strong class="text-dark">Name:</strong> &nbsp; @ChallengeDto.Title</li>
                                <li class="list-group-item border-0 ps-0 text-sm"><strong class="text-dark">Amount:</strong> &nbsp; @ChallengeDto.CountOfUnits</li>
                                <li class="list-group-item border-0 ps-0 text-sm"><strong class="text-dark">Unit:</strong> &nbsp; @ChallengeDto.UnitTitle</li>
                                <li class="list-group-item border-0 ps-0 text-sm"><strong class="text-dark">Frequency:</strong> &nbsp; @ChallengeDto.FrequencyTitle</li>
                                <li class="list-group-item border-0 ps-0 text-sm"><strong class="text-dark">Start day:</strong>
                                    &nbsp; @ChallengeDto.StartDate.Day/@ChallengeDto.StartDate.Month/@ChallengeDto.StartDate.Year
                                </li>
                                <li class="list-group-item border-0 ps-0 text-sm"><strong class="text-dark">End day:</strong>
                                    &nbsp; @ChallengeDto.EndDate.Day/@ChallengeDto.EndDate.Month/@ChallengeDto.EndDate.Year
                                </li>
                                <li class="list-group-item border-0 ps-0 text-sm"><strong class="text-dark">State:</strong>
                                   @if (ChallengeDto.IsCompleted)
                                   {
                                       <span>&nbsp; Completed</span>
                                   }
                                   else if (ChallengeDto.StartDate.Date >= DateTime.Now)
                                   {
                                       <span>&nbsp; In progress</span>
                                   }
                                   else
                                   {
                                       <span>&nbsp; Undone</span>
                                   }
                                </li>
                            </ul>
                             <div class="row justify-content-md-center">
                                 <div class="col-md-auto">
                                     <button type="button"
                                             class="btn bg-gradient-danger mx-auto"
                                             @onclick="DeleteHabit">
                                         Delete
                                     </button>
                                 </div>
                             </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </Authorized>

</AuthorizeView>

@code {
    [Parameter]
    public string Id {get; set;}
    
    ChallengeDTO ChallengeDto { get; set; } = new ();
    protected override async Task OnInitializedAsync()
    {
        ChallengeDto = await _challengeService.GetChallengeById(int.Parse(Id));
    }

    private async Task DeleteHabit()
    {
        await _challengeService.DeleteChallenge(ChallengeDto.Id);
        _navigationManager.NavigateTo("/habits");
    }
}